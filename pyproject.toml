[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "sdk"
authors = [
    { name = "Gram", email = "git@orsinium.dev" },
    { name = "VadimPushtaev", email = "pushtaev.vm@gmail.com" },
]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.11"
dynamic = ["version", "description"]
classifiers = ["Private :: Do Not Upload"]
dependencies = [
    "aiotask-context",
    "ipython",
    "jinja2",
    "jsonschema",
    "markdown-it-py",
    "pytz",
    "pyyaml",
    "requests",
    "rfeed",
    "simplejson",
    "telethon",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
lint = [
    "flake8",
    "isort",
    "mypy",
    "ruff",
    "types-jsonschema",
    "types-pyyaml",
    "types-requests",
    "unify",
]

[tool.mypy]
files = ["sdk", "tests"]
python_version = "3.11"
show_error_codes = true
ignore_missing_imports = true
follow_imports = "silent"
check_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.isort]
profile = "django"
lines_after_imports = 2
skip = [".venvs/", "venv", "repls/"]

[tool.ruff]
line-length = 90
select = [
    "B",
    "COM",
    "E",
    "F",
    "ISC",
    "N",
    "PIE",
    "PL",
    "PTH",
    "Q",
    "RUF",
    "SIM",
    "W",
]
exclude = ["repls"]
ignore = [
    "PLR2004", # allow hardcoded constants
    "PLR0913", # allow multiple arguments for a function
    "B904",    # allow raising exceptions without `from`
    "PLW2901", # allow shadowing loop variables
]
target-version = "py311"

[tool.ruff.flake8-quotes]
inline-quotes = "single"
